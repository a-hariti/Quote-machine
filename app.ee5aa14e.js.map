{"version":3,"sources":["webpack:///./src/api/index.js","webpack:///./src/components/loading/index.js","webpack:///./src/components/quoteContainer/index.js","webpack:///./src/components/quotation/index.js","webpack:///./src/components/quoteText/index.js","webpack:///./src/components/quoteAuthor/index.js","webpack:///./src/components/button/index.js","webpack:///./src/components/tweetButton/index.js","webpack:///./src/components/buttons/index.js","webpack:///./src/components/quote/index.js","webpack:///./src/components/error/index.js","webpack:///./src/components/globalStyles/index.js","webpack:///./src/App.js","webpack:///./src/index.js"],"names":["getQuote","fetch","proxiedUrl","then","res","json","catch","err","console","log","message","bounce","keyframes","Spinner","styled","div","withConfig","displayName","componentId","Bounce","BounceDelayed","react_default","a","createElement","Quotation","span","p","_ref","quoteAuthor","className","button","TweetButton","Button","attrs","href","props","encodeURI","quoteText","target","LayoutButtons","buttons","onLoadQuote","components_button","onClick","tweetButton","as","quotation_ref","components_quote","Fragment","_ref2","components_quoteText","components_quoteAuthor","components_error","error","onRetry","createGlobalStyle","_templateObject","_","loading_ref","globalStyles","App","state","loading","onLoadError","_this","setState","quote","loadQuote","componentDidMount","this","render","_state","quoteContainer","_extends","App_ref2","Component","src_App","document","querySelector"],"mappings":"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","file":"app.ee5aa14e.js","sourcesContent":["const apiUrl =\n    'https://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en',\n  //proxy requests to this url to prevent cors-related headaches ;-)\n  proxiedUrl = `https://cors-anywhere.herokuapp.com/${apiUrl}`\n\nconst getQuote = () =>\n  fetch(\n    process.env.NODE_ENV == 'production'\n      ? proxiedUrl\n      : `/api/1.0/?method=getQuote&format=json&lang=en&key=${Math.random()\n          .toString()\n          .slice(2, 6)}`\n  ).then(res =>\n    res\n      .json()\n      //scoped catch block to retry upon jsonparsing errors\n      .catch(err => {\n        console.log('error parsing json: ', err.message, '. Retrying ...')\n        return getQuote()\n      })\n  )\n\nexport default getQuote\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst bounce = keyframes`\n  0%, 100% { \n    transform: scale(0.0);\n  } \n  50% { \n    transform: scale(1.0);\n  }\n`\n\nconst Spinner = styled.div`\n  width: 40px;\n  height: 40px;\n  position: relative;\n  margin: 100px auto;\n`\nconst Bounce = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: #f53776;\n  opacity: 0.6;\n  position: absolute;\n  top: 0;\n  left: 0;\n  animation: ${bounce} 1s infinite ease-in-out;\n`\nconst BounceDelayed = styled(Bounce)`\n  animation-delay: 0.4s;\n`\n\nexport default _ => (\n  <Spinner>\n    <Bounce />\n    <BounceDelayed />\n  </Spinner>\n)\n","import styled from 'styled-components'\nexport default styled.div`\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  width: 86vw;\n  max-width: 600px;\n  font-size: 28px;\n  text-align: center;\n  padding: 10px 20px;\n  position: relative;\n  transition: all 0.5s;\n  background: #fff;\n  box-shadow: 0 15px 30px 0 rgba(0, 0, 0, 0.11),\n    0 5px 15px 0 rgba(0, 0, 0, 0.08);\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Quotation = styled.span`\n  position: absolute;\n  top: 0;\n  left: 2px;\n  margin-bottom: -30px;\n  font-size: 60px;\n  color: #f53776;\n`\nexport default () => <Quotation>&ldquo;</Quotation>\n","import styled from 'styled-components'\n\nexport default styled.p`\n  margin: 25px 0 10px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport quoteText from '../quoteText'\n\nconst QuoteAuthor = ({ quoteAuthor, className }) => (\n  <p className={className}>{`—${quoteAuthor}`}</p>\n)\n\nexport default styled(QuoteAuthor)`\n  text-align: right;\n  font-size: 20px;\n  margin: 12px 0 12px 0;\n`\n","import styled from 'styled-components'\n\nexport default styled.button`\n  text-align: center;\n  background: transparent;\n  border: 1px solid #f53776;\n  border-radius: 5px;\n  padding: 6px;\n  font-size: 18px;\n  font-family: inherit;\n  color: #f53776;\n  cursor: pointer;\n  text-decoration: none;\n  text-transform: uppercase;\n  &:hover {\n    background-color: #f53776;\n    color: white;\n  }\n`\n","import styled from 'styled-components'\nimport Button from '../button'\n\nconst baseTweetUrl = 'https://twitter.com/intent/tweet?text='\n\nconst TweetButton = styled(Button).attrs({\n  href: props =>\n    baseTweetUrl + encodeURI(props.quoteText + '\\n—' + props.quoteAuthor),\n  target: '_blank'\n})``\n\nexport default TweetButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport Button from '../button'\nimport TweetButton from '../tweetButton'\n\nconst LayoutButtons = styled.div`\n  display: flex;\n  justify-content: center;\n  ${TweetButton} {\n    margin-left: 10px;\n  }\n  @media (max-width: 400px) {\n    flex-direction: column;\n    ${TweetButton} {\n      margin: 5px 0 0;\n    }\n  }\n`\nexport default ({ onLoadQuote, quoteText, quoteAuthor }) => (\n  <LayoutButtons>\n    <Button onClick={onLoadQuote}>new Quote</Button>\n    <TweetButton as=\"a\" quoteText={quoteText} quoteAuthor={quoteAuthor}>\n      tweet\n    </TweetButton>\n  </LayoutButtons>\n)\n","import React from 'react'\nimport Quotation from '../quotation'\nimport QuoteAuthor from '../quoteAuthor'\nimport QuoteText from '../quoteText'\nimport Buttons from '../buttons'\n\nexport default ({ quoteText, quoteAuthor, onLoadQuote }) => {\n  quoteAuthor = quoteAuthor || 'Unknown'\n  return (\n    <React.Fragment>\n      <Quotation />\n      <QuoteText>{quoteText}</QuoteText>\n      <QuoteAuthor quoteAuthor={quoteAuthor} />\n      <Buttons\n        onLoadQuote={onLoadQuote}\n        quoteText={quoteText}\n        quoteAuthor={quoteAuthor}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Button from '../button'\n\nexport default ({ error, onRetry }) => (\n  <React.Fragment>\n    <p>something went wrong: {error.message}</p>\n    <Button onClick={onRetry}>retry</Button>\n  </React.Fragment>\n)\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Cormorant+Garamond\");\n  body {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    font-family: \"Cormorant Garamond\", serif;\n    background: #f8f8f8;\n}`\n","import React, { Component } from 'react'\nimport getQuote from './api'\nimport Loading from './components/loading'\nimport QuoteContainer from './components/quoteContainer'\nimport Quote from './components/quote'\nimport Error from './components/error'\nimport GlobalStyle from './components/globalStyles'\n\nclass App extends Component {\n  state = {\n    loading: true\n  }\n  componentDidMount() {\n    this.loadQuote()\n  }\n  onLoadError = error =>\n    this.setState({\n      loading: false,\n      quote: null,\n      error\n    })\n  loadQuote = () => {\n    this.setState({\n      loading: true,\n      quote: null,\n      error: null\n    })\n    getQuote()\n      .then(quote => this.setState({ quote, loading: false, error: null }))\n      .catch(this.onLoadError)\n  }\n  render() {\n    let { loading, error, quote } = this.state\n    return (\n      <React.Fragment>\n        <QuoteContainer>\n          {loading && <Loading>Loading ...</Loading>}\n          {error && <Error error={error} onRetry={this.loadQuote} />}\n          {quote && <Quote {...quote} onLoadQuote={this.loadQuote} />}\n        </QuoteContainer>\n        <GlobalStyle />\n      </React.Fragment>\n    )\n  }\n}\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './App'\n\nrender(<App />, document.querySelector('#app'))\n"],"sourceRoot":""}